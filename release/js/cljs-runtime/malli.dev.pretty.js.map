{"version":3,"sources":["malli/dev/pretty.cljc"],"mappings":"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","names":["var_args","G__74195","malli.dev.pretty/-printer","js/Error","malli.dev.pretty._printer","options","malli.dev.virhe._printer","cljs.core.merge","malli.dev.virhe/-dark-colors","x","malli.core/schema?","malli.core.form","malli.dev.pretty/-errors","explanation","printer","iter__4652__auto__","s__74197","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__74199","cljs.core/chunk-buffer","i__74198","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__74196","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","error","malli.error.with_error_messages","malli.dev.virhe/-visit","cljs.core.into","cljs.core.interpose","malli.dev.pretty/-explain","schema","value","malli.core.explain","malli.dev.pretty/-block","text","body","malli.dev.virhe/-text","malli.dev.pretty/-link","link","malli.dev.virhe/-color","malli.dev.virhe/-format","_","map__74210","cljs.core/--destructure-map","cljs.core.get","malli.error.humanize","p__74212","map__74213","args","input","p__74214","map__74215","output","p__74216","map__74217","arity","G__74219","malli.dev.pretty/reporter","malli.dev.pretty.reporter","type","data","cljs.core.ex_info","malli.dev.virhe/-exception-doc","malli.dev.virhe/-print-doc","G__74221","malli.dev.pretty/thrower","malli.dev.pretty.thrower","report","message","sb__4795__auto__","goog.string/StringBuffer","*print-newline*-orig-val__74222","cljs.core/*print-newline*","*print-fn*-orig-val__74223","cljs.core/*print-fn*","*print-newline*-temp-val__74224","*print-fn*-temp-val__74225","x__4796__auto__","malli.dev.pretty/prettifier","title","f","cljs.core.assoc","or__4253__auto__","actor","res","cljs.core.apply","fexpr__74226","G__74228","malli.dev.pretty/explain","?schema","malli.dev.pretty.explain","explain","cljs.core/chunk-first"],"sourcesContent":["(ns malli.dev.pretty\n  (:require [malli.core :as m]\n            [malli.dev.virhe :as v]\n            [malli.error :as me]))\n\n(defn -printer\n  ([] (-printer nil))\n  ([options]\n   (v/-printer\n    (merge {:title \"Schema Error\"\n            :width 100\n            :colors v/-dark-colors\n            :unknown (fn [x] (when (m/schema? x) (m/form x)))\n            :throwing-fn-top-level-ns-names [\"malli\" \"clojure\"]}\n           options))))\n\n(defn -errors [explanation printer]\n  (->> (for [error (->> explanation (me/with-error-messages) :errors)]\n         (v/-visit (into {} error) printer)) (interpose :break)))\n\n(defn -explain [schema value printer] (-errors (m/explain schema value) printer))\n\n(defn -block [text body printer]\n  [:group (v/-text text printer) :break :break [:align 2 body]])\n\n(defn -link [link printer]\n  (v/-color :link link printer))\n\n;;\n;; formatters\n;;\n\n(defmethod v/-format ::m/explain [_ _ explanation printer]\n  (let [{:keys [schema value]} explanation]\n    {:body\n     [:group\n      (-block \"Value:\" (v/-visit value printer) printer) :break :break\n      (-block \"Errors:\" (v/-visit (me/humanize explanation) printer) printer) :break :break\n      (-block \"Schema:\" (v/-visit schema printer) printer) :break :break\n      (-block \"More information:\" (-link \"https://cljdoc.org/d/metosin/malli/CURRENT\" printer) printer)]}))\n\n(defmethod v/-format ::m/invalid-input [_ _ {:keys [args input]} printer]\n  {:body\n   [:group\n    (-block \"Invalid function arguments:\" (v/-visit args printer) printer) :break :break\n    (-block \"Input Schema:\" (v/-visit input printer) printer) :break :break\n    (-block \"Errors:\" (-explain input args printer) printer) :break :break\n    (-block \"More information:\" (-link \"https://cljdoc.org/d/metosin/malli/CURRENT/doc/function-schemas\" printer) printer)]})\n\n(defmethod v/-format ::m/invalid-output [_ _ {:keys [value output]} printer]\n  {:body\n   [:group\n    (-block \"Invalid function return value:\" (v/-visit value printer) printer) :break :break\n    (-block \"Output Schema:\" (v/-visit output printer) printer) :break :break\n    (-block \"Errors:\" (-explain output value printer) printer) :break :break\n    (-block \"More information:\" (-link \"https://cljdoc.org/d/metosin/malli/CURRENT/doc/function-schemas\" printer) printer)]})\n\n(defmethod v/-format ::m/invalid-arity [_ _ {:keys [args arity schema]} printer]\n  {:body\n   [:group\n    (-block (str \"Invalid function arity (\" arity \"):\") (v/-visit args printer) printer) :break :break\n    (-block \"Function Schema:\" (v/-visit schema printer) printer) :break :break\n    (-block \"More information:\" (-link \"https://cljdoc.org/d/metosin/malli/CURRENT/doc/function-schemas\" printer) printer)]})\n\n;;\n;; public api\n;;\n\n(defn reporter\n  ([] (reporter (-printer)))\n  ([printer]\n   (fn [type data]\n     (-> (ex-info (str type) {:type type :data data})\n         (v/-exception-doc printer)\n         (v/-print-doc printer)))))\n\n(defn thrower\n  ([] (thrower (-printer)))\n  ([printer]\n   (let [report (reporter printer)]\n     (fn [type data]\n       (let [message (with-out-str (report type data))]\n         (throw (ex-info message {:type type :data data})))))))\n\n(defn prettifier [type title f options]\n  (let [printer (assoc (or (::printer options) (assoc (-printer) :width 60)) :title title)\n        actor (::actor options reporter)]\n    (fn [& args] (when-let [res (apply f args)] ((actor printer) type res) res))))\n\n(defn explain\n  ([?schema value] (explain ?schema value nil))\n  ([?schema value options]\n   (let [explain (fn [] (->> (m/explain ?schema value options) (me/with-error-messages)))]\n     ((prettifier ::m/explain \"Validation Error\" explain options)))))\n"]}