{"version":3,"sources":["website_helpers/global.cljs"],"mappings":";AAOA,AAAKA,+DAAgC,gDAAA,hDAACC;AAEtC,AAAKC,0CAAiB,gDAAA,hDAACD;AACvB,AAAKE,oCAAW,gDAAA,hDAACF;AACjB,AAAKG,+BAAM,AAACH,gDAAOI;AAEnB,iDAAA,jDAAMC,0GACHC;AADH,AAEE,IAAAC,WACE,AAACC,+CAAOC,kBAAM,4CAAA,5CAACC,4GAAgBJ;AADjC,AAAA,qGAAAC,rGAEEI;;AAFFJ;;AAKF,AAAKK,6CACH,gDAAA,hDAACZ;AAEH,wDAAA,xDAAMa;AAAN,AAGE,AAACC,mDAAMb,wCAAiBc;;AACxB,OAACC,sBAAOJ,2CAAoB,AAACK,+CACC,+CAAA,AAAAC,/CAACb,+DAAyBF,+BAC1BD;;AAIhC,AAACc,sBAAOJ,2CAAoB,AAACK,+CACC,+CAAA,AAAAC,/CAACb,+DAAyBF,+BAC1BD;AAE9B,0CAAA,1CAAeiB,4FACZC;AADH,AAEE,OAACJ,sBAAOb,6BAAMiB","names":["website-helpers.global/show-unselected-nodes-in-graph?","reagent.core.atom","website-helpers.global/graph-update-num","website-helpers.global/url-params","website-helpers.global/notes","website-helpers.test-data/notes","website-helpers.global/get-all-note-categories","notes","G__49248","cljs.core.reduce","clojure.set/union","cljs.core.map","cljs.core.prn","website-helpers.global/category-selections","website-helpers.global/sync-category-selections!","cljs.core.swap_BANG_","cljs.core/inc","cljs.core/reset!","website-helpers.utils/get-url-param-selections","cljs.core/deref","website-helpers.global/set-global-notes","new-notes"],"sourcesContent":["(ns website-helpers.global\n  (:require \n    [reagent.core :as r]\n    [clojure.set :refer [union]]\n    [website-helpers.test-data]\n    [website-helpers.utils :refer [get-url-param-selections]]))\n\n(def show-unselected-nodes-in-graph? (r/atom true))\n; whenever this is updated, the page graph will be redrawn\n(def graph-update-num (r/atom 0))\n(def url-params (r/atom {}))\n(def notes (r/atom website-helpers.test-data/notes))\n\n(defn get-all-note-categories\n  [notes]\n  (doto\n    (reduce union (map :categories notes))\n    prn))\n\n; Map of string to boolean\n(def category-selections\n  (r/atom {}))\n\n(defn sync-category-selections!\n  []\n  ; manually for the graph to update when new categories are selected.\n  (swap! graph-update-num inc)\n  (reset! category-selections (get-url-param-selections\n                                (get-all-note-categories @notes)\n                                url-params)))\n\n; just do the category selection without redrawing the graph on first page load\n; in hopes of better performance\n(reset! category-selections (get-url-param-selections\n                              (get-all-note-categories @notes)\n                              url-params))\n\n(defn ^:export set-global-notes\n  [new-notes]\n  (reset! notes new-notes))\n"]}